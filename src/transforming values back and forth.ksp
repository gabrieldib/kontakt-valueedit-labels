on init
    make_perfview
    set_ui_height_px(100)
    declare read ui_slider slider_attack(0, 1000000)
    declare read ui_value_edit valueedit_attack (0, 25000, 1)
    declare read ui_label label_attack.value (1,1)

    valueedit_attack -> text := ""

    { constants }
    declare const $S_MAX := 1000000      { slider range }
    declare const $MS_MAX := 25000       { valueedit range }
    declare const $S_PER_MS := 40        { s = ms * 40 }

    { indices for your array }
    declare const $IDX_ATTACK := 0
    declare read transf_ADSR_controls[1]

    { working vars }
    declare ~s_real
    declare ~t_real
    declare $t_int
    declare $ms

    slider_attack      -> x :=  400
    valueedit_attack   -> x :=  150
    label_attack.value -> x :=  280
    slider_attack      -> y :=   20
    valueedit_attack   -> y :=   20
    label_attack.value -> y :=   20
    valueedit_attack   -> width := 130
end on

function set_label_from_s
    { show milliseconds derived from current s (~s_real) }
    label_attack.value -> text := f'<int(real(transf_ADSR_controls[$IDX_ATTACK]) / real($S_PER_MS) + 0.5)>ms'
end function

function set_label_from_ms
    { show milliseconds from direct editor input ($ms) }
    label_attack.value -> text := f'<ms>ms'
end function

function s_to_t_int
    { t = 1e6 * (s/1e6)^5, then quantize to int storage }
    ~t_real := pow(~s_real * 0.000001, 5.0) * 1000000.0
    $t_int := int(~t_real)
end function

function t_to_s_real
    { s = (t * 1e24)^(1/5) = pow(t, 0.2) * 10^4.8 }
    if ($t_int <= 0)
        ~s_real := 0.0
    else
        ~s_real := pow(real($t_int), 0.2) * pow(10.0, 4.8)
    end if
    if (~s_real < 0.0)
        ~s_real := 0.0
    end if
    if (~s_real > real($S_MAX))
        ~s_real := real($S_MAX)
    end if
end function

{----------- slider drives the stored curve -----------}
on ui_control (slider_attack)
    ~s_real := real(slider_attack)
    call s_to_t_int
    transf_ADSR_controls[$IDX_ATTACK] := $t_int

    call set_label_from_s
    valueedit_attack := int(real(transf_ADSR_controls[$IDX_ATTACK]) / real($S_PER_MS) + 0.5)
end on

{----------- valueedit drives both slider and stored curve -----------}
on ui_control (valueedit_attack)
    { clamp ms to 0..MS_MAX }
    $ms := valueedit_attack
    if ($ms < 0)
        $ms := 0
    end if
    if ($ms > $MS_MAX)
        $ms := $MS_MAX
    end if

    { convert ms -> s, keep as real for math }
    ~s_real := real($ms * $S_PER_MS)

    { set slider to reflect the same value }
    slider_attack := $ms * $S_PER_MS

    { compute and store t from s }
    call s_to_t_int
    transf_ADSR_controls[$IDX_ATTACK] := $t_int

    { the editor acts as the direct label: no transform for label }
    call set_label_from_ms
end on

on persistence_changed
    $t_int := transf_ADSR_controls[$IDX_ATTACK]
    call t_to_s_real
    slider_attack := int(~s_real + 0.5)
    call set_label_from_s
    valueedit_attack := int(~s_real / real($S_PER_MS) + 0.5)
end on
