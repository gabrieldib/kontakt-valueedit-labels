{{ KOVELB }}
{ DEFINES   _____________________________________________________________________________________ }
    define _uiid_arr_index(#ui_control_uiid#) := get_ui_id(#ui_control_uiid#) - __UIID_START
    define _parent_slider_uiid_index(#ui_control#) := ve_labels_parent_sliders_uiid [ _uiid_arr_index(#ui_control#) ] - __UIID_START
    define _uicbs_uiid_arr_index(#ui_control_uiid#) := #ui_control_uiid# - __UIID_START
    define _uicbs_parent_slider_uiid_index(#ui_control_uiid#) := ve_labels_parent_sliders_uiid [ _uicbs_uiid_arr_index(#ui_control_uiid#) ] - __UIID_START

    define __TOTAL_SLIDERS := 4

    define __UIID_START := 32768

    define __ADSR_ATTACK  := 0
    define __ADSR_DECAY   := 1
    define __ADSR_SUSTAIN := 2
    define __ADSR_RELEASE := 3

    define __LABEL_TRANSFORM_EV_MS := 0
    define __LABEL_TRANSFORM_EV_DB := 1

    define __LABEL_VALUE_UNIT_MS := 0
    define __LABEL_VALUE_UNIT_DB := 1
    define __LABEL_VALUE_UNIT_ST := 2
    define __LABEL_VALUE_UNIT_HZ := 3
    define __LABEL_VALUE_UNIT_PC := 4

    define __CURVE_EXPONENTIAL := 0

{ CONSTANTS _____________________________________________________________________________________ }
    declare const ~LOG2 := log(2.0)
    declare const __ADSR_ATTACK_MAX  := 15000
    declare const __ADSR_DECAY_MAX   := 25000
    declare const __ADSR_SUSTAIN_MAX := 12
    declare const __ADSR_RELEASE_MAX := 25000

    declare !label_value_units [5]
        label_value_units [__LABEL_VALUE_UNIT_MS] := "ms"
        label_value_units [__LABEL_VALUE_UNIT_DB] := "dB"
        label_value_units [__LABEL_VALUE_UNIT_ST] := "st"
        label_value_units [__LABEL_VALUE_UNIT_HZ] := "hz"
        label_value_units [__LABEL_VALUE_UNIT_PC] := "%"

{ VARIABLES _____________________________________________________________________________________ }
        {   I use this indexing system for ease of retrieval later, using the ve uiid directly,
            no need for constants, it remains flexible and forgetfulness proof
            to be accessed using uiid_arr_index() define
        }
        declare slider_to_label_ms_max [ 1000 ]
            slider_to_label_ms_max [ _uiid_arr_index(slider_attack  ) ] := 15000
            slider_to_label_ms_max [ _uiid_arr_index(slider_decay   ) ] := 25000
            slider_to_label_ms_max [ _uiid_arr_index(slider_release ) ] := 25000

        declare slider_to_ve_scaler [ 1000 ]
            slider_to_ve_scaler [ _uiid_arr_index(slider_attack ) ] := 1000000 / __ADSR_ATTACK_MAX
            slider_to_ve_scaler [ _uiid_arr_index(slider_decay  ) ] := 1000000 / __ADSR_DECAY_MAX
            slider_to_ve_scaler [ _uiid_arr_index(slider_release) ] := 1000000 / __ADSR_RELEASE_MAX

        declare ve_unit_labels_uiids   [ 1000 ] 
            ve_unit_labels_uiids [ _uiid_arr_index( valueedit_attack  ) ] := get_ui_id(label_attack.unit)
            ve_unit_labels_uiids [ _uiid_arr_index( valueedit_decay   ) ] := get_ui_id(label_decay.unit)
            ve_unit_labels_uiids [ _uiid_arr_index( valueedit_sustain ) ] := get_ui_id(label_sustain.unit)
            ve_unit_labels_uiids [ _uiid_arr_index( valueedit_release ) ] := get_ui_id(label_release.unit)

        declare kovelb.counter

        declare slider_curve_type     [ 1000 ]
        declare ?slider_curve_exponent [ 1000 ]
        declare slider_child_ve_label_uiids   [ 1000 ] 
        declare ve_labels_parent_sliders_uiid [ 1000 ]
        declare _slider_base_index   := _uiid_arr_index( slider_attack )
        declare _slider_last_index   := _uiid_arr_index( slider_release )
        declare _ve_label_base_index := _uiid_arr_index( valueedit_attack )
        declare _ve_label_last_index := _uiid_arr_index( valueedit_release )
        declare _sliders_count       := _slider_last_index - _slider_base_index + 1
        declare _valueedit_count     := _ve_label_last_index - _ve_label_base_index + 1
        declare _paired_s_ve_count   := _sliders_count
        if _valueedit_count < _sliders_count
            _paired_s_ve_count := _valueedit_count
        end if


        for kovelb.counter := 0 to _paired_s_ve_count
            slider_curve_type           [ _slider_base_index + kovelb.counter ] := __CURVE_EXPONENTIAL
            slider_curve_exponent       [ _slider_base_index + kovelb.counter ] := 5.0
            slider_child_ve_label_uiids [ _slider_base_index + kovelb.counter ] := ...
                __UIID_START +_ve_label_base_index + kovelb.counter

            ve_labels_parent_sliders_uiid [ _ve_label_base_index + kovelb.counter ] := ...
                __UIID_START +_slider_base_index + kovelb.counter
        end for

        declare ~adsr_sustain_ev
        declare ~adsr_sustain_dB

        declare read control_curve_value   [ 1000 ]

        declare uicbs_uiid_index
        declare uicbs_parent_uiid
        declare uicbs_parent_uiid_index
        declare uicbs_uiid_arr_index

{ FUNCTIONS   ___________________________________________________________________________________ }
    //fn_65e437_set_ve_label
    declare fn_65e437.a.control_uiid
    declare ~fn_65e437.a.control_curved_value
    declare fn_65e437.a.label_vu
    declare fn_65e437.a.label_vu_uiid // value unit
    declare fn_65e437.a.ve_uiid
    declare fn_65e437.r.ve_value
    declare fn_65e437.a.transform_type
    declare ~fn_65e437.a.ms_max
    declare ~fn_65e437.ev
    declare ~fn_65e437.db
    declare ~fn_65e437.ms_divider

    //fn_aaac5c_get_curved_value
    declare fn_aaac5c.a.control_uiid
    declare fn_aaac5c.a.curve_type
    declare ~fn_aaac5c.a.curve_exponent
    declare ~fn_aaac5c.a.control_range
    declare ~fn_aaac5c.a.control_max
    declare ~fn_aaac5c.a.control_min
    declare ~fn_aaac5c.control_value
    declare ~fn_aaac5c.control_range_min
    declare ~fn_aaac5c.r.curved_value

    //fn_5762b1_get_inverse_curved_value_from_ve
    declare fn_5762b1.a.ve_uiid
    declare ~fn_5762b1.ve_value
    declare ~fn_5762b1.a.ve_multiplicator
    declare ~fn_5762b1.control_value
    declare ~fn_5762b1.parent_range_min_value
    declare ~fn_5762b1.parent_range_max_value
    declare ~fn_5762b1.a.control_range
    declare ~fn_5762b1.a.curve_exponent
    declare fn_5762b1.a.curve_type
    declare fn_5762b1.r.ui_slider_value