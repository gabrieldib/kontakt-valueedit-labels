{ Compiled on Fri Aug 22 23:41:23 2025 }
on init
  declare $sksp_dummy
  declare $concat_it
  declare $concat_offset
  declare $string_it
  declare $list_it
  declare $preproc_i
  message("")
  set_script_title("Gablux K Template")
  set_ui_color(14277081)
  set_control_par_str($INST_ICON_ID,$CONTROL_PAR_PICTURE,"icon")
  set_control_par_str($INST_WALLPAPER_ID,$CONTROL_PAR_PICTURE,"ui_background")
  set_listener($NI_SIGNAL_TIMER_BEAT,24)
  set_listener($NI_SIGNAL_TIMER_MS,1000)
  make_perfview
  set_ui_width_px(1000)
  set_ui_height_px(162)
  set_control_par_str($INST_ICON_ID,$CONTROL_PAR_PICTURE,"ui_icon")
  set_control_par_str($INST_WALLPAPER_ID,$CONTROL_PAR_PICTURE,"ui_background")
  declare $figma_counter
  declare $figma_counter_multi_line_labels
  declare %UI_x[17] := (0, 336, 428, 520, 612, 325, 417, 509, 601, 372, 464, 556, 648, 330, 422, 514, 606)
  declare %UI_y[17] := (0, 55, 55, 55, 55, 117, 117, 117, 117, 119, 119, 119, 119, 37, 37, 37, 37)
  declare %UI_width[17] := (1000, 52, 52, 52, 52, 64, 64, 64, 64, 20, 20, 20, 20, 64, 64, 64, 64)
  declare %UI_height[17] := (162, 52, 52, 52, 52, 18, 18, 18, 18, 14, 14, 14, 14, 18, 18, 18, 18)
  declare %UI_skin[17] := (-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
  declare %UI_font[17] := (-1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  declare %UI_label_text[17] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, 0, 2, 3, 4, 5)
  declare %UI_default_value[17] := (-1, 500000, 500000, 10000, 10000, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_text_alignment[17] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 1)
  declare %UI_text_y_pos[17] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 2, 2, 2, 2)
  declare %UI_mouse_behaviour[17] := (-1, -500, -500, -500, -500, -500, -500, -500, -500, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_mouse_behaviour_x[17] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_mouse_behaviour_y[17] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_z_layer[17] := (-1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare !skin_picture[2]
  !skin_picture[0] := "slider_uni.64f.52px.#222222"
  !skin_picture[1] := "label_transparent"
  declare !_labels_text[6*10]
  declare const $labels_text__SIZE_D1 := 6
  declare const $labels_text__SIZE_D2 := 10
  !_labels_text[10*0+0] := "ms"
  !_labels_text[10*1+0] := "dB"
  !_labels_text[10*2+0] := "Attack"
  !_labels_text[10*3+0] := "Decay"
  !_labels_text[10*4+0] := "Sustain"
  !_labels_text[10*5+0] := "Release"
  declare %MULTI_LINE_DATA[6] := (1, 1, 1, 1, 1, 1)
  declare %font_file_ids[1]
  %font_file_ids[0] := get_font_id("font_JuliaMono_Regular_12_#222222_op100_h1_v2")
  declare ui_panel $panel_UI
  declare ui_slider $slider_attack(0,1000000)
  make_persistent($slider_attack)
  read_persistent_var($slider_attack)
  declare ui_slider $slider_decay(0,1000000)
  make_persistent($slider_decay)
  read_persistent_var($slider_decay)
  declare ui_slider $slider_sustain(12000,1000000)
  make_persistent($slider_sustain)
  read_persistent_var($slider_sustain)
  declare ui_slider $slider_release(0,1000000)
  make_persistent($slider_release)
  read_persistent_var($slider_release)
  declare ui_value_edit $valueedit_attack(0,15000,1)
  make_persistent($valueedit_attack)
  read_persistent_var($valueedit_attack)
  declare ui_value_edit $valueedit_decay(0,25000,1)
  make_persistent($valueedit_decay)
  read_persistent_var($valueedit_decay)
  declare ui_value_edit $valueedit_sustain(-346,12,1)
  make_persistent($valueedit_sustain)
  read_persistent_var($valueedit_sustain)
  declare ui_value_edit $valueedit_release(0,25000,1)
  make_persistent($valueedit_release)
  read_persistent_var($valueedit_release)
  declare ui_label $label_attack__unit(1,1)
  make_persistent($label_attack__unit)
  read_persistent_var($label_attack__unit)
  declare ui_label $label_decay__unit(1,1)
  make_persistent($label_decay__unit)
  read_persistent_var($label_decay__unit)
  declare ui_label $label_sustain__unit(1,1)
  make_persistent($label_sustain__unit)
  read_persistent_var($label_sustain__unit)
  declare ui_label $label_release__unit(1,1)
  make_persistent($label_release__unit)
  read_persistent_var($label_release__unit)
  declare ui_label $label_attack__title(1,1)
  make_persistent($label_attack__title)
  read_persistent_var($label_attack__title)
  declare ui_label $label_decay__title(1,1)
  make_persistent($label_decay__title)
  read_persistent_var($label_decay__title)
  declare ui_label $label_sustain__title(1,1)
  make_persistent($label_sustain__title)
  read_persistent_var($label_sustain__title)
  declare ui_label $label_release__title(1,1)
  make_persistent($label_release__title)
  read_persistent_var($label_release__title)
  declare %UI_ID[10000] := (0)
  %UI_ID[0] := get_ui_id($panel_UI)
  $figma_counter := 1
  while ($figma_counter<17)
    %UI_ID[$figma_counter] := %UI_ID[0]+$figma_counter
    inc($figma_counter)
  end while
  declare %panel_idx[17] := (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
  declare %element_idx[17] := (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)
  $figma_counter := 1
  while ($figma_counter<num_elements(%panel_idx))
    if (%panel_idx[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_PARENT_PANEL,%UI_ID[%panel_idx[$figma_counter-1]])
    end if
    inc($figma_counter)
  end while
  $figma_counter := 0
  while ($figma_counter<17)
    set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_TEXT,"")
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_WIDTH,%UI_width[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_HEIGHT,%UI_height[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_POS_X,%UI_x[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_POS_Y,%UI_y[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_DEFAULT_VALUE,%UI_default_value[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_Z_LAYER,%UI_z_layer[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_CUSTOM_ID,65535)
    if (%UI_mouse_behaviour[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_MOUSE_BEHAVIOUR,%UI_mouse_behaviour[$figma_counter])
    end if
    if (%UI_mouse_behaviour_x[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_MOUSE_BEHAVIOUR_X,%UI_mouse_behaviour_x[$figma_counter])
    end if
    if (%UI_mouse_behaviour_y[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_MOUSE_BEHAVIOUR_Y,%UI_mouse_behaviour[$figma_counter])
    end if
    if (%UI_skin[$figma_counter] # -1)
      set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_PICTURE,!skin_picture[%UI_skin[$figma_counter]])
    end if
    if (%UI_text_alignment[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_TEXT_ALIGNMENT,%UI_text_alignment[$figma_counter])
    end if
    if (%UI_text_y_pos[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_TEXTPOS_Y,%UI_text_y_pos[$figma_counter])
    end if
    if (%UI_label_text[$figma_counter]>-1)
      set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_TEXT,!_labels_text[10*%UI_label_text[$figma_counter]+0])
      if (%MULTI_LINE_DATA[%UI_label_text[$figma_counter]]>1)
        $figma_counter_multi_line_labels := 0
        while ($figma_counter_multi_line_labels<(%MULTI_LINE_DATA[%UI_label_text[$figma_counter]]-1))
          set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_TEXTLINE,!_labels_text[10*%UI_label_text[$figma_counter]+$figma_counter_multi_line_labels+1])
          inc($figma_counter_multi_line_labels)
        end while
      end if
    end if
    if (%UI_font[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_FONT_TYPE,%font_file_ids[%UI_font[$figma_counter]])
    end if
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    inc($figma_counter)
  end while
  declare const ~LOG2 := log(2.0)
  declare const ~__ADSR_ATTACK_MAX := 15000.0
  declare const ~__ADSR_DECAY_MAX := 25000.0
  declare const ~__ADSR_RELEASE_MAX := 25000.0
  declare const ~__ADSR_ATTACK_VE_MULTI := 1000000.0/~__ADSR_ATTACK_MAX
  declare const ~__ADSR_DECAY_VE_MULTI := 1000000.0/~__ADSR_DECAY_MAX
  declare const ~__ADSR_RELEASE_VE_MULTI := 1000000.0/~__ADSR_RELEASE_MAX
  declare !label_value_units[5]
  !label_value_units[0] := "ms"
  !label_value_units[1] := "dB"
  !label_value_units[2] := "st"
  !label_value_units[3] := "hz"
  !label_value_units[4] := "%"
  declare $a__i
  declare $b__i
  declare $c__i
  declare $d__i
  declare $e__i
  declare $f__i
  declare $g__i
  declare $h__i
  declare $i__i
  declare $j__i
  declare $k__i
  declare $l__i
  declare $m__i
  declare $n__i
  declare $o__i
  declare $p__i
  declare $q__i
  declare $r__i
  declare $s__i
  declare $t__i
  declare $u__i
  declare $v__i
  declare $w__i
  declare $x__i
  declare $y__i
  declare $z__i
  declare ~a__r
  declare ~b__r
  declare ~c__r
  declare ~d__r
  declare ~e__r
  declare ~f__r
  declare ~g__r
  declare ~h__r
  declare ~i__r
  declare ~j__r
  declare ~k__r
  declare ~l__r
  declare ~m__r
  declare ~n__r
  declare ~o__r
  declare ~p__r
  declare ~q__r
  declare ~r__r
  declare ~s__r
  declare ~t__r
  declare ~u__r
  declare ~v__r
  declare ~w__r
  declare ~x__r
  declare ~y__r
  declare ~z__r
  declare $note_held_count
  declare %transf_ADSR_controls[4]
  make_persistent(%transf_ADSR_controls)
  read_persistent_var(%transf_ADSR_controls)
  declare ~adsr_sustain_ev
  declare ~adsr_sustain_dB
  declare $fn001__a__control_uiid
  declare $fn001__a__label_vu
  declare $fn001__a__label_vu_uiid
  declare $fn001__a__ve_uiid
  declare $fn001__r__ve_value
  declare $fn001__a__transform_type
  declare ~fn001__a__ms_max
  declare ~fn001__ev
  declare ~fn001__db
  declare ~fn001__ms_divider
  set_control_par(get_ui_id($valueedit_attack),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par(get_ui_id($valueedit_decay),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par(get_ui_id($valueedit_sustain),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par(get_ui_id($valueedit_release),$CONTROL_PAR_SHOW_ARROWS,0)
end on

function fn001_set_ve_label
  ~fn001__ev := real(get_control_par($fn001__a__control_uiid,$CONTROL_PAR_VALUE))
  select ($fn001__a__transform_type)
    case 0
      ~fn001__ms_divider := 1000000.0/~fn001__a__ms_max
      $fn001__r__ve_value := real_to_int(~fn001__ev/~fn001__ms_divider+0.5)
    case 1
      ~fn001__db := 18.0*log2(~fn001__ev/629960.524947)
      $fn001__r__ve_value := real_to_int(~fn001__db)
      message("fn001.r.ve_value: " & $fn001__r__ve_value & " | fn001.db: " & ~fn001__db & " | fn001.ev: " & ~fn001__ev & "")
  end select
  set_control_par_str($fn001__a__label_vu_uiid,$CONTROL_PAR_TEXT,!label_value_units[$fn001__a__label_vu])
  set_control_par($fn001__a__ve_uiid,$CONTROL_PAR_VALUE,$fn001__r__ve_value)
  message("fn001.a.ve_uiid: " & $fn001__a__ve_uiid & " | get_ui_id(valueedit_sustain) : " & get_ui_id($valueedit_sustain) & "")
  message("fn001.a.ve_uiid value: " & get_control_par($fn001__a__ve_uiid,$CONTROL_PAR_VALUE) & "")
end function

on persistence_changed
  message("PCCB")
  message("kontakt-valueedit-labels loaded successfully")
end on

on async_complete
  if ($NI_ASYNC_ID=0)
    message("If statements can't be empty, so I exist.")
  end if
end on

on ui_control($slider_attack)
  $fn001__a__control_uiid := get_ui_id($slider_attack)
  $fn001__a__label_vu := 0
  $fn001__a__label_vu_uiid := get_ui_id($label_attack__unit)
  $fn001__a__ve_uiid := get_ui_id($valueedit_attack)
  $fn001__a__transform_type := 0
  ~fn001__a__ms_max := 15000.0
  call fn001_set_ve_label
end on

on ui_control($slider_decay)
  $valueedit_decay := $slider_decay/40
end on

on ui_control($slider_sustain)
  $fn001__a__control_uiid := get_ui_id($slider_sustain)
  $fn001__a__label_vu := 1
  $fn001__a__label_vu_uiid := get_ui_id($label_sustain__unit)
  $fn001__a__ve_uiid := get_ui_id($valueedit_sustain)
  $fn001__a__transform_type := 1
  call fn001_set_ve_label
end on

on ui_control($slider_release)
  $valueedit_release := $slider_release/40
end on

on ui_control($valueedit_attack)
  $slider_attack := real_to_int(real($valueedit_attack)*~__ADSR_ATTACK_VE_MULTI)
end on

on ui_control($valueedit_decay)
  $slider_decay := real_to_int(real($valueedit_decay)*~__ADSR_DECAY_VE_MULTI)
end on

on ui_control($valueedit_sustain)
  ~adsr_sustain_dB := real($valueedit_sustain)
  ~adsr_sustain_ev := 629960.524947*pow(2.0,~adsr_sustain_dB/18.0)
  $slider_sustain := real_to_int(~adsr_sustain_ev)
end on

on ui_control($valueedit_release)
  $slider_release := real_to_int(real($valueedit_release)*~__ADSR_RELEASE_VE_MULTI)
end on

on note
  ignore_event($EVENT_ID)
  set_event_par($EVENT_ID,$EVENT_PAR_0,1)
  inc($note_held_count)
end on

on release
  if (get_event_par($EVENT_ID,$EVENT_PAR_0)=1)
    dec($note_held_count)
  end if
end on

